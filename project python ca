import socket
import threading

# Server configuration
HOST = '127.0.0.1'
PORT = 12345

# Create a socket for the server
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.bind((HOST, PORT))
server_socket.listen(5)

# List to store connected clients
clients = []

def broadcast(message, client_socket):
    for client in clients:
        if client != client_socket:
            try:
                client.send(message)
            except:
                client.close()
                if client in clients:
                    clients.remove(client)

def handle_client(client_socket):
    while True:
        try:
            message = client_socket.recv(1024)
            if not message:
                break
            broadcast(message, client_socket)
        except:
            continue

def server_main():
    print("Chat server is running on {}:{}".format(HOST, PORT))

    while True:
        client_socket, client_address = server_socket.accept()
        print("Connection from {}:{}".format(client_address[0], client_address[1]))
        clients.append(client_socket)
        client_thread = threading.Thread(target=handle_client, args=(client_socket,))
        client_thread.start()

# Client configuration
def client_main():
    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client_socket.connect((HOST, PORT))
    print("Connected to the server.")

    receive_thread = threading.Thread(target=receive_messages, args=(client_socket,))
    receive_thread.start()

    while True:
        message = input()
        if message.lower() == "exit":
            client_socket.close()
            break
        client_socket.send(message.encode('utf-8'))

def receive_messages(client_socket):
    while True:
        try:
            message = client_socket.recv(1024).decode('utf-8')
            print(message)
        except:
            print("Connection lost.")
            client_socket.close()
            break

if __name__ == "__main__":
    print("Welcome to the Chat Application!")
    role = input("Select 'server' or 'client': ").lower()

    if role == "server":
        server_main()
    elif role == "client":
        client_main()
    else:
        print("Invalid role. Choose 'server' or 'client'.")
